---
# Source: common-hosted-email-service/templates/configmap.yaml
apiVersion: template.openshift.io/v1
kind: Template
labels:
  app.kubernetes.io/component: app
  template: "config-template"
metadata:
  name: "config-template"
objects:
  - apiVersion: v1
    kind: ConfigMap
    metadata:
      name: common-hosted-email-service-config
      annotations:
        "helm.sh/resource-policy": keep
    data:
      DB_PORT: "5432"
      KC_ENABLED: "true"
      KC_PUBLICKEY: MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAsmuiI3bzde2avKEZd8P/ivnUFL9JxwfykQ9eC6qULkkALW4Nj+m0rH+yTuWTWPwZsYyICtWXbQui6Yh+EP0+bTeDzeDaD1oSUgqC4c9EySs64sGPQLE3sHllwONo8AegNQSiPw+KHE2Rf3ky61KuQHOhrszHKq1qT71ct5iPK9oeZ4vkr6A0XfNNOzih6Jp+XrmNmU85+ssNJ7Oy9plwxHBC73Ff3Jw8UF2dRPPLOJT3oAtYJYD4uuQebPq3bKv2n8iQftLG80l1frM1iG/jddoKItSYBRYsi4Mc65gGgkfsTQGk+Up0SULpO/nIASHWLSYNZOTiqAqMgkWQ+Ga9vQIDAQAB
      KC_REALM: comsvcauth
      KC_SERVERURL: https://dev.loginproxy.gov.bc.ca/auth
      SERVER_ATTACHMENTLIMIT: 20mb
      SERVER_BODYLIMIT: 100mb
      SERVER_LOGLEVEL: info
      SERVER_PORT: "3000"
      SERVER_SMTPHOST: apps.smtp.gov.bc.ca
  - apiVersion: v1
    kind: ConfigMap
    metadata:
      name: fluent-bit-config
    data:
      fluent-bit.conf: |
        [SERVICE]
          Flush        5
          Daemon       Off
          # define the log format (see additional config map key/value)
          Parsers_File  parsers.conf
          Log_Level    info
          HTTP_Server   On
          HTTP_Listen   0.0.0.0
          HTTP_Port     2020

        [INPUT]
          # get logs from file written by node app (eg: CDOGS)
          Name   tail
          Path   /var/log/*
          Tag    app

        [FILTER]
          # exclude kube probe logs from app logs
          name   grep
          match  app
          Exclude  agent kube*

        [FILTER]
          name parser
          match app
          Key_Name log
          Parser apache
          Reserve_Data On
          Preserve_Key On

        [FILTER]
          # modify log entry to include more key/value pairs
          name    record_modifier
          match   app
          # add pod name
          Record  hostname ${HOSTNAME}
          # add productname (eg: 'cdogs')
          Record  product ches
          # add namespace
          Record namespace ${NAMESPACE}

        [OUTPUT]
          #### send logs to fluentd:
          # using http to fluentd running in a separate 'Monitoring' (ixhmbm-*) namespace (via a service)
          Name    http
          Match   app
          Host    ${LOGGING_HOST_NAME}
          Port    80
          Format json
          # the URI becomes the Tag available in fluentd
          URI /app
          # we can also send tag as a header
          #header_tag  app

          ### security:
          #tls                On
          #tls.debug         4
          #tls.verify        On
          #tls.ca_file       /fluent-bit/ssl/ca.crt.pem
          #tls.crt_file      /fluent-bit/ssl/client.crt.pem
          #tls.key_file      /fluent-bit/ssl/client.key.pem

        [OUTPUT]
          ### show all logs in standard out
          Name   stdout
          Match  *
      parsers.conf: |
        [PARSER]
          Name   apache
          Format regex
          Regex  ^(?<host>[^ ]*) [^ ]* (?<user>[^ ]*) \[(?<time>[^\]]*)\] "(?<method>\S+)(?: +(?<path>[^\"]*?)(?: +\S*)?)?" (?<code>[^ ]*) (?<size>[^ ]*)(?: "(?<referer>[^\"]*)" "(?<agent>[^\"]*)")?$
          Time_Key time
          Time_Format %d/%b/%Y:%H:%M:%S %z
