---
apiVersion: v1
kind: Template
labels:
  app: "${APP_NAME}-${JOB_NAME}"
  template: "${REPO_NAME}-template"
metadata:
  name: "${REPO_NAME}-redis-dc"
objects:
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    name: "redis-${JOB_NAME}"
  spec:
    replicas: 1
    selector:
      app: "${APP_NAME}-${JOB_NAME}"
      deploymentconfig: "redis-${JOB_NAME}"
      role: redis
    strategy:
      resources: {}
      type: Rolling
    template:
      metadata:
        labels:
          app: "${APP_NAME}-${JOB_NAME}"
          deploymentconfig: "redis-${JOB_NAME}"
          role: redis
      spec:
        containers:
        - image: docker-registry.default.svc:5000/openshift/redis:latest
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
              - "/bin/sh"
              - "-i"
              - "-c"
              - test "$(redis-cli -h 127.0.0.1 -a $REDIS_PASSWORD ping)" == "PONG"
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: "redis-${JOB_NAME}"
          ports:
          - containerPort: 6379
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - "/bin/sh"
              - "-i"
              - "-c"
              - test "$(redis-cli -h 127.0.0.1 -a $REDIS_PASSWORD ping)" == "PONG"
            failureThreshold: 3
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 512Mi
          volumeMounts:
          - mountPath: "/var/lib/redis/data"
            name: redis-${JOB_NAME}-data
          env:
          - name: REDIS_PASSWORD
            valueFrom:
              secretKeyRef:
                key: password
                name: redis-${JOB_NAME}-secret
        volumes:
        - name: redis-${JOB_NAME}-data
          persistentVolumeClaim:
            claimName: redis-${JOB_NAME}
    test: false
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - "redis-${JOB_NAME}"
        from:
          kind: ImageStreamTag
          name: redis:latest
          namespace: openshift
      type: ImageChange
    - type: ConfigChange
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    name: redis-${JOB_NAME}
  spec:
    accessModes:
      - ReadWriteOnce
    storageClassName: ${REDIS_PERSISTENT_VOLUME_CLASS}
    resources:
      requests:
        storage: '${REDIS_VOLUME_CAPACITY}'
- apiVersion: v1
  kind: Service
  metadata:
    name: "redis-${JOB_NAME}"
  spec:
    ports:
    - name: 6379-tcp
      port: 6379
      protocol: TCP
      targetPort: 6379
    selector:
      app: "${APP_NAME}-${JOB_NAME}"
      deploymentconfig: "redis-${JOB_NAME}"
      role: redis
parameters:
- name: REPO_NAME
  description: Application repository name
  displayName: Repository Name
  required: true
- name: JOB_NAME
  description: Job identifier (i.e. 'pr-5' OR 'master')
  displayName: Job Branch Name
  required: true
- name: APP_NAME
  description: Application name
  displayName: Application name
  required: true
- name: REDIS_VOLUME_CAPACITY
  description: Volume space available for Redis
  displayName: Redis Volume Capacity
  required: true
  value: 2Gi
- name: REDIS_PERSISTENT_VOLUME_CLASS
  description: The class of the volume; gluster-file, gluster-block, gluster-file-db
  displayName: Persistent Volume Class name
  required: false
  value: gluster-file
