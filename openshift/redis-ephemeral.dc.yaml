---
apiVersion: template.openshift.io/v1
kind: Template
metadata:
  annotations:
    description: Redis in standalone mode, with ephemeral storage.
    iconClass: icon-redis
    openshift.io/display-name: Redis Standalone (Ephemeral)
    openshift.io/long-description: This template deploys a standalone Redis with ephemeral storage.
    tags: redis
  name: ${NAME}-ephemeral
labels:
  app: ${NAME}-${INSTANCE}
  app.kubernetes.io/component: redis
  app.kubernetes.io/instance: ${INSTANCE}
  app.kubernetes.io/name: redis
  app.kubernetes.io/managed-by: template
  app.kubernetes.io/part-of: ${APP_NAME}-${INSTANCE}
  app.kubernetes.io/version: "6"
  template: ${NAME}-ephemeral-template
objects:
  - apiVersion: v1
    kind: Service
    metadata:
      name: ${NAME}-${INSTANCE}
    spec:
      ports:
        - name: redis
          port: 6379
          targetPort: 6379
      selector:
        app: ${NAME}-${INSTANCE}
        deploymentconfig: ${NAME}-${INSTANCE}
  - apiVersion: v1
    kind: DeploymentConfig
    metadata:
      name: ${NAME}-${INSTANCE}
    spec:
      replicas: ${{REPLICAS}}
      revisionHistoryLimit: 10
      selector:
        app: ${NAME}-${INSTANCE}
        deploymentconfig: ${NAME}-${INSTANCE}
        role: redis
      strategy:
        resources: {}
        type: Rolling
      template:
        metadata:
          labels:
            app: ${NAME}-${INSTANCE}
            app.kubernetes.io/component: redis
            app.kubernetes.io/instance: ${INSTANCE}
            app.kubernetes.io/name: redis
            app.kubernetes.io/managed-by: template
            app.kubernetes.io/part-of: ${APP_NAME}-${INSTANCE}
            app.kubernetes.io/version: "6"
            deploymentconfig: ${NAME}-${INSTANCE}
            role: redis
        spec:
          containers:
            - name: redis
              image: ${IMAGE_REGISTRY}/${IMAGE_NAME}:${IMAGE_TAG}
              imagePullPolicy: IfNotPresent
              command:
                - redis-server
                - /conf/redis.conf
              env:
                - name: REDISCLI_AUTH
                  valueFrom:
                    secretKeyRef:
                      key: password
                      name: ${NAME}-${INSTANCE}-secret
              lifecycle:
                preStop:
                  exec:
                    command:
                      - /bin/sh
                      - -c
                      - redis-cli -h $HOSTNAME shutdown nosave
              livenessProbe:
                exec:
                  command:
                    - /bin/sh
                    - -c
                    - test "$(redis-cli -h $HOSTNAME ping)" == "PONG"
                initialDelaySeconds: 10
                timeoutSeconds: 1
                failureThreshold: 3
              ports:
                - containerPort: 6379
                  name: redis
              readinessProbe:
                exec:
                  command:
                    - /bin/sh
                    - -c
                    - test "$(redis-cli -h $HOSTNAME ping)" == "PONG"
                initialDelaySeconds: 15
                timeoutSeconds: 1
                failureThreshold: 3
              resources:
                requests:
                  cpu: ${CPU_REQUEST}
                  memory: ${MEMORY_REQUEST}
                limits:
                  cpu: ${CPU_LIMIT}
                  memory: ${MEMORY_LIMIT}
              volumeMounts:
                - name: conf
                  mountPath: /conf
                  readOnly: false
                - name: data
                  mountPath: /data
                  readOnly: false
          volumes:
            - name: conf
              secret:
                secretName: ${NAME}-${INSTANCE}-secret
            - name: data
              emptyDir: {}
      test: false
      triggers:
        - type: ConfigChange
parameters:
  - name: APP_NAME
    description: The name of the application which will use this.
    displayName: Application client name
    required: true
  - name: NAME
    description: The name of the application for labelling all artifacts.
    displayName: Application Name
    required: true
    value: redis
  - name: INSTANCE
    description: The name of this instance of the application
    displayName: Application Instance Name
    required: true
  - name: REPLICAS
    description: The number of StatefulSet replicas to use.
    displayName: Replicas
    required: true
    value: "1"
  - name: IMAGE_REGISTRY
    description: The base docker registry
    displayName: Docker Image Registry
    required: true
    value: docker.io
  - name: IMAGE_NAME
    description: Redis Image Name
    displayName: Image Name
    required: true
    value: redis
  - name: IMAGE_TAG
    description: Redis Image Tag
    displayName: Image Tag
    required: true
    value: 6.0.9-alpine
  - name: CPU_REQUEST
    description: Starting amount of CPU the container can use.
    displayName: CPU Request
    required: true
    value: 25m
  - name: CPU_LIMIT
    description: Maximum amount of CPU the container can use.
    displayName: CPU Limit
    required: true
    value: 100m
  - name: MEMORY_REQUEST
    description: Starting amount of memory the container can use.
    displayName: Memory Request
    required: true
    value: 64Mi
  - name: MEMORY_LIMIT
    description: Maximum amount of memory the container can use.
    displayName: Memory Limit
    required: true
    value: 256Mi
