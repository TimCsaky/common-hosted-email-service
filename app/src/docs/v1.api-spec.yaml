openapi: 3.0.0
info:
  version: 1.0.0
  title: NodeMailer PoC API
  description: >-
    Testing out nodemailer in a NodeJS API
  license:
    name: Apache 2.0
    url: 'https://www.apache.org/licenses/LICENSE-2.0.html'
  contact:
    name: NR Common Service Showcase
    email: NR.CommonServiceShowcase@gov.bc.ca
servers:
  - url: /api/v1
    description: This Server
security:
  - bearerAuth: []
  - OpenID: []
paths:
  /checks/status:
    get:
      summary: Returns status of correspondent APIs
      operationId: checkStatus
      tags:
        - Checks
      responses:
        '200':
          description: Responds if the correspondent API endpoint(s) are healthy
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EndpointList'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /email/merge:
    post:
      summary: Performs a template mail merge and sends the email
      operationId: emailMerge
      tags:
        - Email
      responses:
        '200':
          description: Responds with the correspondence id of the message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailMerge'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /email/merge/validate: {}
components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
    OpenID:
      type: openIdConnect
      openIdConnectUrl: 'https://example.com/.well-known/openid-configuration'
  schemas:
    EmailMerge:
      type: object
      required:
        - recipients
        - sender
      properties:
        context:
          type: object
          description: A freeform JSON object of key-value pairs
        recipients:
          type: array
          items:
            type: string
            example:
              - foo@gov.bc.ca
              - bar@gov.bc.ca
          description: A list of recipient emails
        sender:
          type: string
          description: The sender email
          example: example@gov.bc.ca
    EndpointStatus:
      type: object
      required:
        - name
        - endpoint
        - healthCheck
        - authenticated
        - authorized
      properties:
        name:
          type: string
          description: The name of the endpoint
          example: 'WebADE API'
        endpoint:
          type: string
          description: Base endpoint URL
          example: 'https://example.com/v1/'
        healthCheck:
          type: boolean
          description: Is the endpoint reachable
        authenticated:
          type: boolean
          description: Are credentials valid to access endpoint
        authorized:
          type: boolean
          description: Do the credentials have the right permissions
    EndpointList:
      type: object
      required:
        - endpoints
      properties:
        endpoints:
          type: array
          items:
            $ref: '#/components/schemas/EndpointStatus'
          description: A list of Endpoint Statuses
    Error:
      required:
        - error
      properties:
        error:
          type: string
          description: contains a message about the failure
          example: Something errored
    Success:
      required:
        - message
      properties:
        message:
          type: string
          description: 'Contains message about the success, normally "Written successfully"'
          example: Written successfully
  responses:
    Forbidden:
      description: Lack required role to perform action
    NotFound:
      description: Not found
    UnauthorizedError:
      description: Access token is missing or invalid
